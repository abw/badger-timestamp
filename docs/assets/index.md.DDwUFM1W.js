import{_ as a,c as n,a1 as t,G as e,w as h,B as l,o as p,j as k}from"./chunks/framework.BeunNgS1.js";const r="/badger-timestamp/assets/oss.BpG_YKN_.svg",u=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"Badger Timestamp","tagline":"Javascript Date and Time Utilities","image":{"src":"images/badger3.svg","alt":"Badger"},"actions":[{"theme":"brand","text":"Getting Started","link":"/getting-started"},{"theme":"alt","text":"Documentation","link":"/creating-timestamps"},{"theme":"alt","text":"Function Reference","link":"/reference"}]}},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1724664029000}'),o={name:"index.md"};function d(E,s,g,c,y,m){const i=l("center");return p(),n("div",null,[s[1]||(s[1]=t(`<h2 id="who-ordered-this" tabindex="-1">Who Ordered This? <a class="header-anchor" href="#who-ordered-this" aria-label="Permalink to &quot;Who Ordered This?&quot;">​</a></h2><p>This module implements an object for parsing, representing, adjusting, comparing and formatting ISO8601 timestamps. It is designed with ease of use in mind, making simple things simple and hard things possible.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { timestamp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@abw/badger-timestamp&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// create a Timestamp object from an ISO8601 timestamp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2024-03-01T11:37:24&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or the current date/time</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   const ts = timestamp()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or in milliseconds since the Unix epoch (e.g. JS Date.getTime())</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   const ts = timestamp(1709293422471)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// or in seconds since the Unix epoch (e.g. file modification time)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//   const ts = timestamp({ unix: 123456789 })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// output the date, time, year, etc.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2024-03-01</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 11:37:24</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">year</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2024</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">monthName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// March</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">weekdayName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Friday</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// adjust the timestamp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adjust</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;3 days&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2024-03-04</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// compare to another timestamp or date (time is optional)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2024-02-28&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2024-02-28&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span></code></pre></div><h2 id="opinionated-and-selfish-software" tabindex="-1">Opinionated and Selfish Software <a class="header-anchor" href="#opinionated-and-selfish-software" aria-label="Permalink to &quot;Opinionated and Selfish Software&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING - People Who Share Their Source Code Do Not Owe You Anything!</p><p>This is OSS: <strong>Open Source Software</strong> that you can freely download, use and adapt if you want to. But here OSS also stands for <strong>Opinionated and Selfish Software</strong>.</p><p>It doesn&#39;t set out to please all the people, all the time. On the contrary, it is designed to please one person (me) most of the time. I wrote it to help me get my job done. If it helps you get your job done then great. But please don&#39;t complain if it doesn&#39;t do what you want. It&#39;s not my job to help you do your job.</p><p><a href="https://freeasinweekend.org/open-source-open-mind" target="_blank" rel="noreferrer">https://freeasinweekend.org/open-source-open-mind</a></p></div>`,6)),e(i,null,{default:h(()=>s[0]||(s[0]=[k("img",{src:r,width:"150",height:"150",style:{"margin-top":"4rem"}},null,-1)])),_:1})])}const f=a(o,[["render",d]]);export{u as __pageData,f as default};
